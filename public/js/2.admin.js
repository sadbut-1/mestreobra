webpackJsonp([2],{

/***/ 9:
/***/ function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! lg-thumbnail - v1.0.3 - 2017-02-05\n* http://sachinchoolur.github.io/lightGallery\n* Copyright (c) 2017 Sachin N; Licensed GPLv3 */\n\n(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (a0) {\n      return (factory(a0));\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require('jquery'));\n  } else {\n    factory(jQuery);\n  }\n}(this, function ($) {\n\n(function() {\n\n    'use strict';\n\n    var defaults = {\n        thumbnail: true,\n\n        animateThumb: true,\n        currentPagerPosition: 'middle',\n\n        thumbWidth: 100,\n        thumbContHeight: 100,\n        thumbMargin: 5,\n\n        exThumbImage: false,\n        showThumbByDefault: true,\n        toogleThumb: true,\n        pullCaptionUp: true,\n\n        enableThumbDrag: true,\n        enableThumbSwipe: true,\n        swipeThreshold: 50,\n\n        loadYoutubeThumbnail: true,\n        youtubeThumbSize: 1,\n\n        loadVimeoThumbnail: true,\n        vimeoThumbSize: 'thumbnail_small',\n\n        loadDailymotionThumbnail: true\n    };\n\n    var Thumbnail = function(element) {\n\n        // get lightGallery core plugin data\n        this.core = $(element).data('lightGallery');\n\n        // extend module default settings with lightGallery core settings\n        this.core.s = $.extend({}, defaults, this.core.s);\n\n        this.$el = $(element);\n        this.$thumbOuter = null;\n        this.thumbOuterWidth = 0;\n        this.thumbTotalWidth = (this.core.$items.length * (this.core.s.thumbWidth + this.core.s.thumbMargin));\n        this.thumbIndex = this.core.index;\n\n        // Thumbnail animation value\n        this.left = 0;\n\n        this.init();\n\n        return this;\n    };\n\n    Thumbnail.prototype.init = function() {\n        var _this = this;\n        if (this.core.s.thumbnail && this.core.$items.length > 1) {\n            if (this.core.s.showThumbByDefault) {\n                setTimeout(function(){\n                    _this.core.$outer.addClass('lg-thumb-open');\n                }, 700);\n            }\n\n            if (this.core.s.pullCaptionUp) {\n                this.core.$outer.addClass('lg-pull-caption-up');\n            }\n\n            this.build();\n            if (this.core.s.animateThumb) {\n                if (this.core.s.enableThumbDrag && !this.core.isTouch && this.core.doCss()) {\n                    this.enableThumbDrag();\n                }\n\n                if (this.core.s.enableThumbSwipe && this.core.isTouch && this.core.doCss()) {\n                    this.enableThumbSwipe();\n                }\n\n                this.thumbClickable = false;\n            } else {\n                this.thumbClickable = true;\n            }\n\n            this.toogle();\n            this.thumbkeyPress();\n        }\n    };\n\n    Thumbnail.prototype.build = function() {\n        var _this = this;\n        var thumbList = '';\n        var vimeoErrorThumbSize = '';\n        var $thumb;\n        var html = '<div class=\"lg-thumb-outer\">' +\n            '<div class=\"lg-thumb lg-group\">' +\n            '</div>' +\n            '</div>';\n\n        switch (this.core.s.vimeoThumbSize) {\n            case 'thumbnail_large':\n                vimeoErrorThumbSize = '640';\n                break;\n            case 'thumbnail_medium':\n                vimeoErrorThumbSize = '200x150';\n                break;\n            case 'thumbnail_small':\n                vimeoErrorThumbSize = '100x75';\n        }\n\n        _this.core.$outer.addClass('lg-has-thumb');\n\n        _this.core.$outer.find('.lg').append(html);\n\n        _this.$thumbOuter = _this.core.$outer.find('.lg-thumb-outer');\n        _this.thumbOuterWidth = _this.$thumbOuter.width();\n\n        if (_this.core.s.animateThumb) {\n            _this.core.$outer.find('.lg-thumb').css({\n                width: _this.thumbTotalWidth + 'px',\n                position: 'relative'\n            });\n        }\n\n        if (this.core.s.animateThumb) {\n            _this.$thumbOuter.css('height', _this.core.s.thumbContHeight + 'px');\n        }\n\n        function getThumb(src, thumb, index) {\n            var isVideo = _this.core.isVideo(src, index) || {};\n            var thumbImg;\n            var vimeoId = '';\n\n            if (isVideo.youtube || isVideo.vimeo || isVideo.dailymotion) {\n                if (isVideo.youtube) {\n                    if (_this.core.s.loadYoutubeThumbnail) {\n                        thumbImg = '//img.youtube.com/vi/' + isVideo.youtube[1] + '/' + _this.core.s.youtubeThumbSize + '.jpg';\n                    } else {\n                        thumbImg = thumb;\n                    }\n                } else if (isVideo.vimeo) {\n                    if (_this.core.s.loadVimeoThumbnail) {\n                        thumbImg = '//i.vimeocdn.com/video/error_' + vimeoErrorThumbSize + '.jpg';\n                        vimeoId = isVideo.vimeo[1];\n                    } else {\n                        thumbImg = thumb;\n                    }\n                } else if (isVideo.dailymotion) {\n                    if (_this.core.s.loadDailymotionThumbnail) {\n                        thumbImg = '//www.dailymotion.com/thumbnail/video/' + isVideo.dailymotion[1];\n                    } else {\n                        thumbImg = thumb;\n                    }\n                }\n            } else {\n                thumbImg = thumb;\n            }\n\n            thumbList += '<div data-vimeo-id=\"' + vimeoId + '\" class=\"lg-thumb-item\" style=\"width:' + _this.core.s.thumbWidth + 'px; margin-right: ' + _this.core.s.thumbMargin + 'px\"><img src=\"' + thumbImg + '\" /></div>';\n            vimeoId = '';\n        }\n\n        if (_this.core.s.dynamic) {\n            for (var i = 0; i < _this.core.s.dynamicEl.length; i++) {\n                getThumb(_this.core.s.dynamicEl[i].src, _this.core.s.dynamicEl[i].thumb, i);\n            }\n        } else {\n            _this.core.$items.each(function(i) {\n\n                if (!_this.core.s.exThumbImage) {\n                    getThumb($(this).attr('href') || $(this).attr('data-src'), $(this).find('img').attr('src'), i);\n                } else {\n                    getThumb($(this).attr('href') || $(this).attr('data-src'), $(this).attr(_this.core.s.exThumbImage), i);\n                }\n\n            });\n        }\n\n        _this.core.$outer.find('.lg-thumb').html(thumbList);\n\n        $thumb = _this.core.$outer.find('.lg-thumb-item');\n\n        // Load vimeo thumbnails\n        $thumb.each(function() {\n            var $this = $(this);\n            var vimeoVideoId = $this.attr('data-vimeo-id');\n\n            if (vimeoVideoId) {\n                $.getJSON('//www.vimeo.com/api/v2/video/' + vimeoVideoId + '.json?callback=?', {\n                    format: 'json'\n                }, function(data) {\n                    $this.find('img').attr('src', data[0][_this.core.s.vimeoThumbSize]);\n                });\n            }\n        });\n\n        // manage active class for thumbnail\n        $thumb.eq(_this.core.index).addClass('active');\n        _this.core.$el.on('onBeforeSlide.lg.tm', function() {\n            $thumb.removeClass('active');\n            $thumb.eq(_this.core.index).addClass('active');\n        });\n\n        $thumb.on('click.lg touchend.lg', function() {\n            var _$this = $(this);\n            setTimeout(function() {\n\n                // In IE9 and bellow touch does not support\n                // Go to slide if browser does not support css transitions\n                if ((_this.thumbClickable && !_this.core.lgBusy) || !_this.core.doCss()) {\n                    _this.core.index = _$this.index();\n                    _this.core.slide(_this.core.index, false, true, false);\n                }\n            }, 50);\n        });\n\n        _this.core.$el.on('onBeforeSlide.lg.tm', function() {\n            _this.animateThumb(_this.core.index);\n        });\n\n        $(window).on('resize.lg.thumb orientationchange.lg.thumb', function() {\n            setTimeout(function() {\n                _this.animateThumb(_this.core.index);\n                _this.thumbOuterWidth = _this.$thumbOuter.width();\n            }, 200);\n        });\n\n    };\n\n    Thumbnail.prototype.setTranslate = function(value) {\n        // jQuery supports Automatic CSS prefixing since jQuery 1.8.0\n        this.core.$outer.find('.lg-thumb').css({\n            transform: 'translate3d(-' + (value) + 'px, 0px, 0px)'\n        });\n    };\n\n    Thumbnail.prototype.animateThumb = function(index) {\n        var $thumb = this.core.$outer.find('.lg-thumb');\n        if (this.core.s.animateThumb) {\n            var position;\n            switch (this.core.s.currentPagerPosition) {\n                case 'left':\n                    position = 0;\n                    break;\n                case 'middle':\n                    position = (this.thumbOuterWidth / 2) - (this.core.s.thumbWidth / 2);\n                    break;\n                case 'right':\n                    position = this.thumbOuterWidth - this.core.s.thumbWidth;\n            }\n            this.left = ((this.core.s.thumbWidth + this.core.s.thumbMargin) * index - 1) - position;\n            if (this.left > (this.thumbTotalWidth - this.thumbOuterWidth)) {\n                this.left = this.thumbTotalWidth - this.thumbOuterWidth;\n            }\n\n            if (this.left < 0) {\n                this.left = 0;\n            }\n\n            if (this.core.lGalleryOn) {\n                if (!$thumb.hasClass('on')) {\n                    this.core.$outer.find('.lg-thumb').css('transition-duration', this.core.s.speed + 'ms');\n                }\n\n                if (!this.core.doCss()) {\n                    $thumb.animate({\n                        left: -this.left + 'px'\n                    }, this.core.s.speed);\n                }\n            } else {\n                if (!this.core.doCss()) {\n                    $thumb.css('left', -this.left + 'px');\n                }\n            }\n\n            this.setTranslate(this.left);\n\n        }\n    };\n\n    // Enable thumbnail dragging and swiping\n    Thumbnail.prototype.enableThumbDrag = function() {\n\n        var _this = this;\n        var startCoords = 0;\n        var endCoords = 0;\n        var isDraging = false;\n        var isMoved = false;\n        var tempLeft = 0;\n\n        _this.$thumbOuter.addClass('lg-grab');\n\n        _this.core.$outer.find('.lg-thumb').on('mousedown.lg.thumb', function(e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                // execute only on .lg-object\n                e.preventDefault();\n                startCoords = e.pageX;\n                isDraging = true;\n\n                // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                _this.core.$outer.scrollLeft += 1;\n                _this.core.$outer.scrollLeft -= 1;\n\n                // *\n                _this.thumbClickable = false;\n                _this.$thumbOuter.removeClass('lg-grab').addClass('lg-grabbing');\n            }\n        });\n\n        $(window).on('mousemove.lg.thumb', function(e) {\n            if (isDraging) {\n                tempLeft = _this.left;\n                isMoved = true;\n                endCoords = e.pageX;\n\n                _this.$thumbOuter.addClass('lg-dragging');\n\n                tempLeft = tempLeft - (endCoords - startCoords);\n\n                if (tempLeft > (_this.thumbTotalWidth - _this.thumbOuterWidth)) {\n                    tempLeft = _this.thumbTotalWidth - _this.thumbOuterWidth;\n                }\n\n                if (tempLeft < 0) {\n                    tempLeft = 0;\n                }\n\n                // move current slide\n                _this.setTranslate(tempLeft);\n\n            }\n        });\n\n        $(window).on('mouseup.lg.thumb', function() {\n            if (isMoved) {\n                isMoved = false;\n                _this.$thumbOuter.removeClass('lg-dragging');\n\n                _this.left = tempLeft;\n\n                if (Math.abs(endCoords - startCoords) < _this.core.s.swipeThreshold) {\n                    _this.thumbClickable = true;\n                }\n\n            } else {\n                _this.thumbClickable = true;\n            }\n\n            if (isDraging) {\n                isDraging = false;\n                _this.$thumbOuter.removeClass('lg-grabbing').addClass('lg-grab');\n            }\n        });\n\n    };\n\n    Thumbnail.prototype.enableThumbSwipe = function() {\n        var _this = this;\n        var startCoords = 0;\n        var endCoords = 0;\n        var isMoved = false;\n        var tempLeft = 0;\n\n        _this.core.$outer.find('.lg-thumb').on('touchstart.lg', function(e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                e.preventDefault();\n                startCoords = e.originalEvent.targetTouches[0].pageX;\n                _this.thumbClickable = false;\n            }\n        });\n\n        _this.core.$outer.find('.lg-thumb').on('touchmove.lg', function(e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                e.preventDefault();\n                endCoords = e.originalEvent.targetTouches[0].pageX;\n                isMoved = true;\n\n                _this.$thumbOuter.addClass('lg-dragging');\n\n                tempLeft = _this.left;\n\n                tempLeft = tempLeft - (endCoords - startCoords);\n\n                if (tempLeft > (_this.thumbTotalWidth - _this.thumbOuterWidth)) {\n                    tempLeft = _this.thumbTotalWidth - _this.thumbOuterWidth;\n                }\n\n                if (tempLeft < 0) {\n                    tempLeft = 0;\n                }\n\n                // move current slide\n                _this.setTranslate(tempLeft);\n\n            }\n        });\n\n        _this.core.$outer.find('.lg-thumb').on('touchend.lg', function() {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n\n                if (isMoved) {\n                    isMoved = false;\n                    _this.$thumbOuter.removeClass('lg-dragging');\n                    if (Math.abs(endCoords - startCoords) < _this.core.s.swipeThreshold) {\n                        _this.thumbClickable = true;\n                    }\n\n                    _this.left = tempLeft;\n                } else {\n                    _this.thumbClickable = true;\n                }\n            } else {\n                _this.thumbClickable = true;\n            }\n        });\n\n    };\n\n    Thumbnail.prototype.toogle = function() {\n        var _this = this;\n        if (_this.core.s.toogleThumb) {\n            _this.core.$outer.addClass('lg-can-toggle');\n            _this.$thumbOuter.append('<span class=\"lg-toogle-thumb lg-icon\"></span>');\n            _this.core.$outer.find('.lg-toogle-thumb').on('click.lg', function() {\n                _this.core.$outer.toggleClass('lg-thumb-open');\n            });\n        }\n    };\n\n    Thumbnail.prototype.thumbkeyPress = function() {\n        var _this = this;\n        $(window).on('keydown.lg.thumb', function(e) {\n            if (e.keyCode === 38) {\n                e.preventDefault();\n                _this.core.$outer.addClass('lg-thumb-open');\n            } else if (e.keyCode === 40) {\n                e.preventDefault();\n                _this.core.$outer.removeClass('lg-thumb-open');\n            }\n        });\n    };\n\n    Thumbnail.prototype.destroy = function() {\n        if (this.core.s.thumbnail && this.core.$items.length > 1) {\n            $(window).off('resize.lg.thumb orientationchange.lg.thumb keydown.lg.thumb');\n            this.$thumbOuter.remove();\n            this.core.$outer.removeClass('lg-has-thumb');\n        }\n    };\n\n    $.fn.lightGallery.modules.Thumbnail = Thumbnail;\n\n})();\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }

});